/////////////////////////////////////////////////////////////////////////
Client --> API-Gateway
API-Gateway --> SessionManagement; API-Gateway --> UserManagement  
UserManagement --> SessionManagement
SessionManagement --> API-Gateway
API-Gateway -->  Client
/////////////////////////////////////////////////////////////////////////
1. API-Gateway
Обрабатывает входящие запросы, выполняет маршрутизацию и базовую авторизацию.
Основные функции:
    • Middleware:
        ◦ Logging (traceID, таймауты)
        ◦ Rate-Limiter
        ◦ Authorization через SessionManagement
    • Проксирование: /reg, /auth, /logout, /delete → UserManagement
    • Graceful Shutdown
Технологии: Gin, gRPC, Swagger
/////////////////////////////////////////////////////////////////////////
2. UserManagement
Управляет пользователями (регистрация/аутентификация/удаление).
Эндпоинты:
    • POST /reg
    • POST /auth
    • DELETE /logout
    • DELETE /delete
Бизнес-логика:
    • RegistrateAndLogin
    • AuthenticateAndLogin
    • Logout
    • DeleteAccount
Технологии: REST API, PostgreSQL, gRPC, bcrypt
/////////////////////////////////////////////////////////////////////////
3. SessionManagement
Управляет сессиями пользователей.
gRPC методы:
    • CreateSession
    • ValidateSession
    • DeleteSession
Хранение: Redis с TTL
Технологии: gRPC, Redis, Zap Logger
/////////////////////////////////////////////////////////////////////////
Общие характеристики:
    • Конфигурация: config.yml (Viper)
    • Логирование: стандартная библиотека/Zap
    • Модульность: разделение на пакеты
    • Обработка ошибок и разделение их на клиентские и серверные
Особенности реализации:
    • Retry-логика для всех внешних вызовов
    • Timeout handling
    • Graceful shutdown во всех сервисах
