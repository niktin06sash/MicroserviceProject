// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/session.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"` // Только userID от User Management
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionRequest) Reset() {
	*x = CreateSessionRequest{}
	mi := &file_proto_session_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionRequest) ProtoMessage() {}

func (x *CreateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionRequest.ProtoReflect.Descriptor instead.
func (*CreateSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSessionRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type CreateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	SessionID     string                 `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`    // Session Management создает и возвращает sessionID
	ExpiryTime    int64                  `protobuf:"varint,3,opt,name=expiryTime,proto3" json:"expiryTime,omitempty"` // Время истечения сессии (Unix timestamp)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSessionResponse) Reset() {
	*x = CreateSessionResponse{}
	mi := &file_proto_session_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSessionResponse) ProtoMessage() {}

func (x *CreateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSessionResponse.ProtoReflect.Descriptor instead.
func (*CreateSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateSessionResponse) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *CreateSessionResponse) GetExpiryTime() int64 {
	if x != nil {
		return x.ExpiryTime
	}
	return 0
}

type ValidateSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"` // Только sessionID от API Gateway
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSessionRequest) Reset() {
	*x = ValidateSessionRequest{}
	mi := &file_proto_session_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSessionRequest) ProtoMessage() {}

func (x *ValidateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSessionRequest.ProtoReflect.Descriptor instead.
func (*ValidateSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{2}
}

func (x *ValidateSessionRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type ValidateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	UserID        string                 `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"` // Session Management возвращает userID, связанный с sessionID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSessionResponse) Reset() {
	*x = ValidateSessionResponse{}
	mi := &file_proto_session_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSessionResponse) ProtoMessage() {}

func (x *ValidateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSessionResponse.ProtoReflect.Descriptor instead.
func (*ValidateSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{3}
}

func (x *ValidateSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ValidateSessionResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type DeleteSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionRequest) Reset() {
	*x = DeleteSessionRequest{}
	mi := &file_proto_session_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionRequest) ProtoMessage() {}

func (x *DeleteSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteSessionRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type DeleteSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSessionResponse) Reset() {
	*x = DeleteSessionResponse{}
	mi := &file_proto_session_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSessionResponse) ProtoMessage() {}

func (x *DeleteSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_session_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSessionResponse.ProtoReflect.Descriptor instead.
func (*DeleteSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_session_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteSessionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_session_proto protoreflect.FileDescriptor

const file_proto_session_proto_rawDesc = "" +
	"\n" +
	"\x13proto/session.proto\x12\asession\".\n" +
	"\x14CreateSessionRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\tR\x06userID\"o\n" +
	"\x15CreateSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1c\n" +
	"\tsessionID\x18\x02 \x01(\tR\tsessionID\x12\x1e\n" +
	"\n" +
	"expiryTime\x18\x03 \x01(\x03R\n" +
	"expiryTime\"6\n" +
	"\x16ValidateSessionRequest\x12\x1c\n" +
	"\tsessionID\x18\x01 \x01(\tR\tsessionID\"K\n" +
	"\x17ValidateSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\tR\x06userID\"4\n" +
	"\x14DeleteSessionRequest\x12\x1c\n" +
	"\tsessionID\x18\x01 \x01(\tR\tsessionID\"1\n" +
	"\x15DeleteSessionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\x8c\x02\n" +
	"\x0eSessionService\x12P\n" +
	"\rCreateSession\x12\x1d.session.CreateSessionRequest\x1a\x1e.session.CreateSessionResponse\"\x00\x12V\n" +
	"\x0fValidateSession\x12\x1f.session.ValidateSessionRequest\x1a .session.ValidateSessionResponse\"\x00\x12P\n" +
	"\rDeleteSession\x12\x1d.session.DeleteSessionRequest\x1a\x1e.session.DeleteSessionResponse\"\x00BMZKgithub.com/niktin06sash/MicroserviceProject/SessionManagement_service/protob\x06proto3"

var (
	file_proto_session_proto_rawDescOnce sync.Once
	file_proto_session_proto_rawDescData []byte
)

func file_proto_session_proto_rawDescGZIP() []byte {
	file_proto_session_proto_rawDescOnce.Do(func() {
		file_proto_session_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_session_proto_rawDesc), len(file_proto_session_proto_rawDesc)))
	})
	return file_proto_session_proto_rawDescData
}

var file_proto_session_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_session_proto_goTypes = []any{
	(*CreateSessionRequest)(nil),    // 0: session.CreateSessionRequest
	(*CreateSessionResponse)(nil),   // 1: session.CreateSessionResponse
	(*ValidateSessionRequest)(nil),  // 2: session.ValidateSessionRequest
	(*ValidateSessionResponse)(nil), // 3: session.ValidateSessionResponse
	(*DeleteSessionRequest)(nil),    // 4: session.DeleteSessionRequest
	(*DeleteSessionResponse)(nil),   // 5: session.DeleteSessionResponse
}
var file_proto_session_proto_depIdxs = []int32{
	0, // 0: session.SessionService.CreateSession:input_type -> session.CreateSessionRequest
	2, // 1: session.SessionService.ValidateSession:input_type -> session.ValidateSessionRequest
	4, // 2: session.SessionService.DeleteSession:input_type -> session.DeleteSessionRequest
	1, // 3: session.SessionService.CreateSession:output_type -> session.CreateSessionResponse
	3, // 4: session.SessionService.ValidateSession:output_type -> session.ValidateSessionResponse
	5, // 5: session.SessionService.DeleteSession:output_type -> session.DeleteSessionResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_session_proto_init() }
func file_proto_session_proto_init() {
	if File_proto_session_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_session_proto_rawDesc), len(file_proto_session_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_session_proto_goTypes,
		DependencyIndexes: file_proto_session_proto_depIdxs,
		MessageInfos:      file_proto_session_proto_msgTypes,
	}.Build()
	File_proto_session_proto = out.File
	file_proto_session_proto_goTypes = nil
	file_proto_session_proto_depIdxs = nil
}
